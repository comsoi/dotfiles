#! /bin/bash
# Set language environment
if [[ $(tty) == /dev/pts/* ]]; then
	export LANG="zh_CN.UTF-8"
else
	export LANG="en_US.UTF-8"
fi
#export LC_ALL=zh_CN.UTF-8
#export LANGUAGE=zh_CN.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='vim'
if [[ -n $SSH_CONNECTION ]]; then
	export VISUAL='vim'
else
	export VISUAL='lvim'
fi

# Enable less mouse scrolling
export LESS="-R"

# Compilation flags
export ARCHFLAGS="-arch x86_64"

# PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.cargo/bin:$PATH

# OS
unameOut=$(uname -a)
case "${unameOut}" in
	*Microsoft*)     OS="WSL1";; #wls must be first since it will have Linux in the name too
	*microsoft*)     OS="WSL2";;
	Linux*)     OS="Linux";;
	Darwin*)    OS="Mac";;
	CYGWIN*)    OS="Cygwin";;
	MINGW*)     OS="Windows";;
	*Msys)     OS="Windows";;
	*)          OS="UNKNOWN:${unameOut}"
esac

# if [[ ${OS} == "Mac" ]] && sysctl -n machdep.cpu.brand_string | grep -q 'Apple M1'; then
#     #Check if its an M1. This check should work even if the current processes is running under x86 emulation.
#     OS="MacM1"
# fi

trim_path() {
    # PATH
    PATH=$(echo "$PATH" | sed -e 's/\/mnt\/c\/Program Files\/nodejs://')
    PATH=$(echo "$PATH" | sed -e 's/\/mnt\/c\/Users\/Lenod\/AppData\/Roaming\/npm://')
    PATH=$(echo "$PATH" | sed -e 's/\/mnt\/c\/Program Files (x86)\/Yarn\/bin://')
}

if [[ ${OS} == "WSL2" ]] ; then
	if [[ -z "$LD_LIBRARY_PATH" ]]; then
		export LD_LIBRARY_PATH="/usr/lib/wsl/lib"
	elif [[ ":$LD_LIBRARY_PATH:" != *":/usr/lib/wsl/lib:"* ]]; then
		export LD_LIBRARY_PATH="/usr/lib/wsl/lib:$LD_LIBRARY_PATH"
	fi
    trim_path
fi

if [[ ${OS} == "WSL1" ]] ; then
    trim_path
fi

if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then . $HOME/.nix-profile/etc/profile.d/nix.sh; fi
